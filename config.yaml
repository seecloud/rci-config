---

- core:
    listen: ["0.0.0.0", 8081]
    url: "https://seecloud.mirantis.com"
    secrets: /rci/store/rci/secrets.yaml
    jobs-logs: /rci/logs/jobs/
    logs-url: "https://seecloud.mirantis.com/rci/logs/"

- service:
    module: rci.services.github
    name: gh
    data-path: /rci/store/rci/github/data

- provider:
    name: os
    module: rci.providers.openstack
    max_vms: 64
    ssh:
      default_username: centos
      key_name: rci
      private_key_path: /rci/store/rci/key
      access_net: "rci-int-net"
    clusters:
      os-image-builder:
        vm:
          image: ubuntu-os-image-builder
          username: ubuntu
          flavor: m1.small
          interfaces:
            - ["static", "rci-int-net"]
          user_data: |
            #cloud-config
            disable_root: false
      seecloud_cluster:
        master:
          image: centos-7-1608-ansible
          flavor: m1.medium
          interfaces:
            - ["static", "rci-int-net"]
            - ["dynamic", "testcluster-int-net"]
        pr1:
          image: seecloud-centos
          flavor: rci-2vcpu-4096ram-20disk
          interfaces:
            - ["dynamic", "testcluster-int-net"]
        pr2:
          image: seecloud-centos
          flavor: rci-2vcpu-4096ram-20disk
          interfaces:
            - ["dynamic", "testcluster-int-net"]
        pr3:
          image: seecloud-centos
          flavor: rci-2vcpu-4096ram-20disk
          interfaces:
            - ["dynamic", "testcluster-int-net"]

- script:
    name: build-os-image-builder
    user: root
    data: |
      apt-get -y update && apt-get -y upgrade && apt-get -y install git vim qemu rng-tools gnupg unzip
      wget https://releases.hashicorp.com/packer/0.11.0/packer_0.11.0_linux_amd64.zip -O /tmp/packer.zip 2> /dev/null
      cd /tmp/ && unzip packer.zip
      mv packer /usr/local/bin/
      wget http://buildlogs.centos.org/rolling/7/isos/x86_64/CentOS-7-x86_64-Minimal-1511.iso -O /var/CentOS-7-x86_64-Minimal-1511.iso 2> /dev/null

- script:
    name: install-docker-centos
    data: |
      sudo sh -xs <<EOF
      yum -y install docker python-netaddr
      service docker start
      chown centos /var/run/docker.sock
      EOF

- script:
    name: install-latest-ansible
    data: |
      sudo apt-add-repository -y ppa:ansible/ansible
      sudo apt-get -y update
      sudo apt-get -y install ansible

- script:
    name: git-checkout
    data: |
      mkdir -p $GITHUB_REPO
      cd $GITHUB_REPO
      cd ..
      git clone git://github.com/$GITHUB_REPO.git || true
      cd ../$GITHUB_REPO
      [[ -v GITHUB_REMOTE ]] && git remote add _pr $GITHUB_REMOTE
      git remote update
      git checkout $GITHUB_HEAD

- script:
    name: build-os-image
    data: |
      sudo rngd -r /dev/urandom
      cat > keygen <<EOF
      Key-Type: RSA
      Key-Length: 2048
      Subkey-Type: RSA
      Subkey-Length: 2048
      Name-Real: RCI
      Name-Comment: no passphrse
      Name-Email: support@mirantis.com
      Expire-Date: 0
      Passphrase: abc
      %commit
      %echo done
      EOF
      gpg --batch --gen-key keygen && mv .gnupg /tmp/
      sudo chgrp sudo /dev/kvm
      sudo mv /var/CentOS-7-x86_64-Minimal-1511.iso /tmp/
      cd $GITHUB_REPO && export PACKER_LOG=1
      echo | packer build -only qemu centos7.json
      cd /tmp/ && ls -lha && qemu-img create -f qcow2 centos-vda.qcow2 8G
      time qemu-system-x86_64 -boot d -cdrom centos-image.iso -m 512 -display vnc=0.0.0.0:1 -no-reboot -drive file=centos-vda.qcow2,if=virtio,cache=unsafe,discard=on
      #time qemu-system-x86_64 -boot c -drive file=centos-vda.qcow2,if=virtio,cache=unsafe,discard=on -display vnc=0.0.0.0:1

- script:
    name: copy-ssh-key-to-slaves
    interpreter: /bin/bash -x
    data: |
        /usr/sbin/ip r
        ssh-keygen -t rsa -N "" -f .ssh/id_rsa
        PUBLIC_KEY=$(cat .ssh/id_rsa.pub)
        cat > /tmp/.node-setup.sh << EOF
        mkdir /root/.ssh || true
        echo $PUBLIC_KEY >> /root/.ssh/authorized_keys
        chmod 600 /root/.ssh/authorized_keys
        EOF
        upload_key () {
        n=0
        until [ $n -ge 60 ]
        do
         n=$[$n+1]
         sshpass -p mirantis ssh -o StrictHostKeyChecking=no root@${!SRV} sh -xs < /tmp/.node-setup.sh
         SVNAME=$(echo $SRV | sed 's/^RCI_SERVER_\([[:alnum:]]\+\).*/\1/')
         ssh -o StrictHostKeyChecking=no root@$SVNAME id
         if [ $? -eq 0 ]
         then
          return
         fi
         sleep 10
        done
        echo "Timeout waiting for host"
        exit 255
        }
        for SRV in ${!RCI_SERVER_pr*}
        do
        upload_key
        done

- script:
    name: eth1-up
    data: |
      sudo /sbin/dhclient -R subnet-mask eth1
      sudo /usr/sbin/ip r

- script:
    name: add-all-servers-to-etc-hosts
    data: |
      env
      rm /tmp/_hosts || true
      for S in ${!RCI_SERVER_*}
      do
       SVNAME=$(echo $S | sed 's/^RCI_SERVER_\([[:alnum:]]\+\).*/\1/')
       echo "${!S} $SVNAME" >> /tmp/_hosts
      done
      sudo sh -c 'cat /tmp/_hosts >> /etc/hosts'

- script:
    name: run-automation
    data: |
      cd $GITHUB_REPO
      utils/inventory-generator --nodes pr1 pr2 pr3
      ansible -i inventory/inventory.cfg -m ping all
      ansible-playbook -i inventory/bootstrap.cfg bootstrap-runner.yml
      ansible-playbook -i inventory/inventory.cfg automation-runner.yml --extra-vars "docker_registry_virtual_ip=10.1.1.253"

- job:
    name: test-automation
    provider: os
    cluster: seecloud_cluster
    scripts:
      master:
        - git-checkout
        - install-docker-centos
        - eth1-up
        - add-all-servers-to-etc-hosts
        - copy-ssh-key-to-slaves
        - run-automation

- job:
    name: test-os-image-builder
    provider: os
    cluster: os-image-builder
    scripts:
      vm:
        - git-checkout
        - build-os-image

- matrix:
    name: automation
    projects:
      - seecloud/automation
      - r-ci/automation
    cr:
      - test-automation

- matrix:
    name: image-builder
    projects:
      - r-ci/os-image-builder
      - seecloud/os-image-builder
    cr:
      - test-os-image-builder
