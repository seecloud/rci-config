---

- core:
    listen: ["0.0.0.0", 8081]
    url: "https://seecloud.mirantis.com"
    secrets: /rci/store/rci/secrets.yaml
    logs-url: "https://seecloud.mirantis.com/rci/logs/"

- service:
    name: monitor
    module: rci.services.monitor
    http_path: monitor
    dbm_path: /tmp/rci-monitor
    logs_path: /rci/logs/jobs
    cookie_name: rcm
    access:
      allow_anonymous: true
      admin:
        users: [redixin]
        orgs: []
      operator:
        users: []
        orgs: [seecloud, r-ci]

- service:
    module: rci.services.github
    name: gh
    data-path: /rci/store/rci/github/data

- provider:
    name: os
    module: rci.providers.openstack
    max_vms: 64
    ssh:
      default_username: centos
      key_name: rci
      private_key_path: /rci/store/rci/key
      access_net: "rci-int-net"
    clusters:
      os-image-builder:
        vm:
          image: ubuntu-os-image-builder
          username: ubuntu
          flavor: m1.small
          interfaces:
            - ["static", "rci-int-net"]
          user_data: |
            #cloud-config
            disable_root: false
      seecloud_cluster:
        master:
          password: mirantis
          image: centos-from-iso-custom
          flavor: rci-2vcpu-4096ram-42disk
          interfaces:
            - ["static", "rci-int-net"]
            - ["dynamic", "testcluster-int-net"]
        pr1:
          image: centos-from-iso-custom
          flavor: rci-2vcpu-4096ram-42disk
          interfaces:
            - ["dynamic", "testcluster-int-net"]
        pr2:
          image: centos-from-iso-custom
          flavor: rci-2vcpu-4096ram-42disk
          interfaces:
            - ["dynamic", "testcluster-int-net"]
        pr3:
          image: centos-from-iso-custom
          flavor: rci-2vcpu-4096ram-42disk
          interfaces:
            - ["dynamic", "testcluster-int-net"]

- script:
    name: build-os-image-builder
    user: root
    data: |
      apt-get -y update && apt-get -y upgrade && apt-get -y install git vim qemu rng-tools gnupg unzip
      wget https://releases.hashicorp.com/packer/0.11.0/packer_0.11.0_linux_amd64.zip -O /tmp/packer.zip 2> /dev/null
      cd /tmp/ && unzip packer.zip
      mv packer /usr/local/bin/
      wget http://buildlogs.centos.org/rolling/7/isos/x86_64/CentOS-7-x86_64-Minimal-1511.iso -O /var/CentOS-7-x86_64-Minimal-1511.iso 2> /dev/null

- script:
    name: install-docker-centos
    data: |
      sudo sh -xs <<EOF
      yum -y install docker python-netaddr
      service docker start
      chown centos /var/run/docker.sock
      EOF

- script:
    name: install-latest-ansible
    data: |
      sudo apt-add-repository -y ppa:ansible/ansible
      sudo apt-get -y update
      sudo apt-get -y install ansible

- script:
    name: git-checkout
    data: |
      env
      mkdir -p $GITHUB_REPO
      cd $GITHUB_REPO
      cd ..
      git clone git://github.com/$GITHUB_REPO.git || true
      cd ../$GITHUB_REPO
      [[ -v GITHUB_REMOTE ]] && git remote add _pr $GITHUB_REMOTE
      git remote update
      git checkout $GITHUB_HEAD

- script:
    name: build-os-image
    data: |
      sudo rngd -r /dev/urandom
      cat > keygen <<EOF
      Key-Type: RSA
      Key-Length: 2048
      Subkey-Type: RSA
      Subkey-Length: 2048
      Name-Real: RCI
      Name-Comment: no passphrse
      Name-Email: support@mirantis.com
      Expire-Date: 0
      Passphrase: abc
      %commit
      %echo done
      EOF
      gpg --batch --gen-key keygen && mv .gnupg /tmp/
      sudo chgrp sudo /dev/kvm
      sudo mv /var/CentOS-7-x86_64-Minimal-1511.iso /tmp/
      cd $GITHUB_REPO && export PACKER_LOG=1
      echo | packer build -only qemu centos7.json
      cd /tmp/ && ls -lha && qemu-img create -f qcow2 centos-vda.qcow2 40G
      iptables-save
      timeout 3600 qemu-system-x86_64 -boot d -cdrom centos-image.iso -m 512 -display vnc=0.0.0.0:1 -no-reboot -drive file=centos-vda.qcow2,if=virtio,cache=unsafe,discard=on
      #time qemu-system-x86_64 -boot c -drive file=centos-vda.qcow2,if=virtio,cache=unsafe,discard=on -display vnc=0.0.0.0:1

- script:
    name: prepare-automation-master
    username: root
    data: |
      env
      /usr/sbin/sysctl -w net.ipv4.ip_forward=1
      /usr/sbin/ip addr add 10.1.1.1/24 dev eth1
      /usr/sbin/ip link set eth1 up
      /usr/sbin/iptables -t nat -I POSTROUTING -s 10.1.1.0/24 -j MASQUERADE
      /usr/sbin/iptables -D FORWARD -j REJECT --reject-with icmp-host-prohibited || true
      # add all hostnames to /etc/hosts
      for S in ${!RCI_SERVER_*}
      do
       SVNAME=$(echo $S | sed 's/^RCI_SERVER_\([[:alnum:]]\+\).*/\1/')
       echo "${!S} $SVNAME" >> /etc/hosts
      done
      # create user and add ssh key
      useradd -m centos
      mkdir /home/centos/.ssh
      echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbn5QfmFjSQWlINsFpxNkpsAxUaeBZu2CM3hp7TTPcjMvjfXLEhSHfwtjjKxTzy8JXILJxypb3WcyNCgxzYYrZerejBu0p1V13JWFl6zIZ6aN4xgqBsehWrg2Ly/6L9LxY1MSDYDUbR48Hq6QsnQan9d07R8a/Uv/SdcUPHM05iaKCVOKklRq9z3dGSS9qv43PjB2o12OOLPkxoxR+qf7pdMk0A9NnT/J+ihKIFDjKz3y4X+4Wp8Wic9cP7wq08jbwo5hQV7dCcWgMxLf/T+c5dmfipsApmU7614+nBXf7Hk8nbK0Eaq3n9Qiyv4aTBboKyIvvaC4gWT6JfATLiwsj eye@et' >> /home/centos/.ssh/authorized_keys
      echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDF13qwUbb+lva8KCNE6IppajmGfF3MJIFhIPD7HYwzeIyI3INlc6nMMOk+r4a6IO3okVxgqRi27boebvUpazw0Jw4T4e1oLQpWCxvhTZkukFsrd9DJiCj07VXluua2ofaCRLCSHVLdjAH4WocmZeCXpZF1ldDeNBeuX0iYJiFBslrG/pmOuCm3IEL7GmoIJjF0Idtwo3tkWcvCUXKvBaVqCHS34Q/KJLAvZc95MLESs/kdnhfxhxbpWrRRFcZn/zIxuuptuTBzWOPd7CnsOLo5PCnuxIfDznDYYzQUJq6OmwMZipepTtymXUvFQiqq7xc/HmNR51vowqwoftgHNxYvoaQgXkneWFnq4Cl9WZaLVs90wNgQewPaKmhL8ia1S2C3Cub0ILsbU/091L7adBeZI87pkfx72HhFQRUOcVprgPAEKKTbEvUQKAQ4rZ6GOIU5Tz/fKf1sXLhiTEAgpGpaTyyTP04vpgP5iY4kcXQHpRsPxg1BQ+93S3KqF2XAdXvrA4eZfAHmGhsAOePdnJQZVf8c4exsgkIGEyM9Wgi2ZWlq7oY0tFJLf+Kq7y23QuC6isIqBBIDN/TtmHRpiWNY4zwmGhzSxBdA6zMVy9PblrU71w1xVBS4KKwUqbWbP06pA7V04sp8kGKz5OmN9Z+rdTQJ2v41SSU71kT6XSFFOQ== vstoiko@mirantis.com' >> /home/centos/.ssh/authorized_keys
      chown -R centos /home/centos/.ssh
      # add user to docker group
      groupadd docker
      usermod -a -G docker centos
      # start docker service
      service docker-latest restart

- script:
    name: prepare-automation-nodes
    interpreter: /bin/bash -xs
    data: |
      # create ssh key and copy to every node
      ssh-keygen -t rsa -N "" -f .ssh/id_rsa
      PUBLIC_KEY=$(cat .ssh/id_rsa.pub)
      cat > /tmp/.node-setup.sh << EOF
      mkdir /root/.ssh || true
      echo $PUBLIC_KEY >> /root/.ssh/authorized_keys
      chmod 600 /root/.ssh/authorized_keys
      EOF
      upload_key () {
      n=0
      until [ $n -ge 60 ]
      do
       n=$[$n+1]
       sshpass -p mirantis ssh -o StrictHostKeyChecking=no root@${!SRV} sh -xs < /tmp/.node-setup.sh
       SVNAME=$(echo $SRV | sed 's/^RCI_SERVER_\([[:alnum:]]\+\).*/\1/')
       ssh -o StrictHostKeyChecking=no root@$SVNAME id
       if [ $? -eq 0 ]
       then
        return
       fi
       sleep 10
      done
      echo "Timeout waiting for host"
      exit 255
      }
      for SRV in ${!RCI_SERVER_pr*}
      do
      upload_key
      done

- script:
    name: run-automation
    data: |
      cd $GITHUB_REPO
      utils/inventory-generator --nodes pr1 pr2 pr3
      ansible -i inventory/inventory.cfg -m ping all
      ansible-playbook -vvv -i inventory/bootstrap.cfg bootstrap-runner.yml
      ansible-playbook -i inventory/inventory.cfg automation-runner.yml --extra-vars "docker_registry_virtual_ip=10.1.1.253"

- job:
    name: test-automation
    provider: os
    cluster: seecloud_cluster
    scripts:
      master:
        - prepare-automation-master
        - prepare-automation-nodes
        - git-checkout
        - run-automation

- job:
    name: test-os-image-builder
    provider: os
    cluster: os-image-builder
    scripts:
      vm:
        - git-checkout
        - build-os-image

- matrix:
    name: automation
    projects:
      - seecloud/automation
      - r-ci/automation
    cr:
      - test-automation

- matrix:
    name: image-builder
    projects:
      - r-ci/os-image-builder
      - seecloud/os-image-builder
    cr:
      - test-os-image-builder
